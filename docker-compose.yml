version: '3.6'
services:

  php-fpm:
    build: docker/php-fpm
    depends_on:
      - db
    links:
      - db
    volumes:
      - "./:/www"
    environment:
      - DOCKER_PHP_CONFIG=${DOCKER_PHP_CONFIG}
      - DOCKER_XDEBUG=${DOCKER_XDEBUG}
      - DOCKER_SUPERVISOR=${DOCKER_SUPERVISOR}
      - DOCKER_CRON=${DOCKER_CRON}
    networks:
        - rest

  nginx:
    image: nginx:1.16-alpine
    depends_on:
      - php-fpm
    ports:
      - "8200:80"
      - "8243:443"
    volumes:
      - "./:/www"
      - "./docker/nginx/conf.d:/etc/nginx/conf.d"
    networks:
      - rest

  db:
    image: postgres:12-alpine
    volumes:
      - ./docker/postgres/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "8201:5432"
    networks:
      - rest

  test-db:
    image: postgres:12-alpine
    volumes:
      - ./docker/postgres/postgres-test:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_DATABASE_TEST}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "8202:5432"
    networks:
      - rest

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8203:8025"
    depends_on:
      - php-fpm
    networks:
      - rest

  node:
    build: docker/nodejs
    depends_on:
      - php-fpm
    volumes:
      - "./:/www"
    networks:
      - rest
    ports:
      - "8204:3000"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8205:8080"

networks:
  rest:
    driver: bridge